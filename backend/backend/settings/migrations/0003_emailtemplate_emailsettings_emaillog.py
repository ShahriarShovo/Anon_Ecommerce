# Generated by Django 4.2.4 on 2025-09-28 10:26

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('orders', '0002_alter_address_unique_together'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('settings', '0002_banner'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Template name', max_length=100)),
                ('template_type', models.CharField(choices=[('registration', 'User Registration'), ('password_reset', 'Password Reset'), ('order_confirmation', 'Order Confirmation'), ('order_shipped', 'Order Shipped'), ('order_delivered', 'Order Delivered'), ('admin_notification', 'Admin Notification'), ('support_reply', 'Support Reply'), ('welcome', 'Welcome Email'), ('newsletter', 'Newsletter'), ('custom', 'Custom Template')], default='custom', max_length=30)),
                ('subject', models.CharField(help_text='Email subject line', max_length=200)),
                ('html_content', models.TextField(help_text='HTML email template')),
                ('text_content', models.TextField(blank=True, help_text='Plain text email template', null=True)),
                ('available_variables', models.JSONField(blank=True, default=list, help_text='Available template variables')),
                ('sample_data', models.JSONField(blank=True, default=dict, help_text='Sample data for preview')),
                ('is_active', models.BooleanField(default=True, help_text='Is this template active?')),
                ('is_default', models.BooleanField(default=False, help_text='Is this the default template for this type?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_email_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Template',
                'verbose_name_plural': 'Email Templates',
                'ordering': ['template_type', 'name'],
                'unique_together': {('template_type', 'created_by', 'is_default')},
            },
        ),
        migrations.CreateModel(
            name='EmailSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Friendly name for this email configuration', max_length=100)),
                ('email_address', models.EmailField(help_text='Email address to send from', max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('email_password', models.CharField(help_text='Email password (encrypted)', max_length=500)),
                ('smtp_host', models.CharField(help_text='SMTP server host', max_length=255)),
                ('smtp_port', models.PositiveIntegerField(default=587, help_text='SMTP server port')),
                ('smtp_username', models.CharField(blank=True, help_text='SMTP username (if different from email)', max_length=255, null=True)),
                ('smtp_password', models.CharField(blank=True, help_text='SMTP password (if different from email password)', max_length=500, null=True)),
                ('use_tls', models.BooleanField(default=True, help_text='Use TLS encryption')),
                ('use_ssl', models.BooleanField(default=False, help_text='Use SSL encryption')),
                ('security_type', models.CharField(choices=[('tls', 'TLS'), ('ssl', 'SSL'), ('none', 'None')], default='tls', max_length=10)),
                ('from_name', models.CharField(help_text='Display name for sender', max_length=100)),
                ('from_email', models.EmailField(help_text='From email address', max_length=254)),
                ('reply_to_email', models.EmailField(blank=True, help_text='Reply-to email address', max_length=254, null=True)),
                ('email_provider', models.CharField(choices=[('smtp', 'SMTP'), ('gmail', 'Gmail'), ('outlook', 'Outlook'), ('yahoo', 'Yahoo'), ('custom', 'Custom SMTP')], default='smtp', max_length=20)),
                ('provider_settings', models.JSONField(blank=True, default=dict, help_text='Additional provider-specific settings')),
                ('is_active', models.BooleanField(default=True, help_text='Is this email configuration active?')),
                ('is_primary', models.BooleanField(default=False, help_text='Is this the primary email configuration?')),
                ('priority', models.PositiveIntegerField(default=1, help_text='Priority order (1 = highest)')),
                ('use_for_registration', models.BooleanField(default=True, help_text='Use for user registration emails')),
                ('use_for_password_reset', models.BooleanField(default=True, help_text='Use for password reset emails')),
                ('use_for_order_notifications', models.BooleanField(default=True, help_text='Use for order notifications')),
                ('use_for_admin_notifications', models.BooleanField(default=True, help_text='Use for admin notifications')),
                ('use_for_support', models.BooleanField(default=True, help_text='Use for support emails')),
                ('last_tested', models.DateTimeField(blank=True, help_text='Last time SMTP connection was tested', null=True)),
                ('test_status', models.BooleanField(default=False, help_text='Last test result')),
                ('test_message', models.TextField(blank=True, help_text='Last test result message', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_email_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Setting',
                'verbose_name_plural': 'Email Settings',
                'ordering': ['priority', '-created_at'],
                'unique_together': {('email_address', 'created_by')},
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_email', models.EmailField(help_text='Recipient email address', max_length=254)),
                ('from_email', models.EmailField(help_text='Sender email address', max_length=254)),
                ('subject', models.CharField(help_text='Email subject', max_length=200)),
                ('html_content', models.TextField(blank=True, help_text='HTML content sent', null=True)),
                ('text_content', models.TextField(blank=True, help_text='Text content sent', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('bounced', 'Bounced')], default='pending', max_length=20)),
                ('status_message', models.TextField(blank=True, help_text='Status message or error', null=True)),
                ('sent_at', models.DateTimeField(blank=True, help_text='When email was sent', null=True)),
                ('delivered_at', models.DateTimeField(blank=True, help_text='When email was delivered', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('additional_data', models.JSONField(blank=True, default=dict, help_text='Additional tracking data')),
                ('email_settings_used', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='settings.emailsettings')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.order')),
                ('template_used', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='settings.emailtemplate')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Log',
                'verbose_name_plural': 'Email Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['to_email', 'status'], name='settings_em_to_emai_e416ab_idx'), models.Index(fields=['created_at'], name='settings_em_created_faaf21_idx'), models.Index(fields=['status'], name='settings_em_status_570e32_idx')],
            },
        ),
    ]
