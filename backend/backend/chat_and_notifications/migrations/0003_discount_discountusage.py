# Generated by Django 4.2.4 on 2025-09-25 22:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone

class Migration(migrations.Migration):

    dependencies = [
        ('orders', '0002_alter_address_unique_together'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0007_productreview_reviewvote_and_more'),
        ('chat_and_notifications', '0002_notification_notificationview'),
    ]

    operations = [
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Discount name/description', max_length=200)),
                ('discount_type', models.CharField(choices=[('general', 'General Discount (All Products)'), ('quantity', 'Quantity-based Discount'), ('product_specific', 'Product-specific Discount'), ('category', 'Category Discount')], default='general', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('expired', 'Expired')], default='active', max_length=10)),
                ('percentage', models.DecimalField(decimal_places=2, help_text='Discount percentage (0-100)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('minimum_amount', models.DecimalField(decimal_places=2, default=0, help_text='Minimum cart amount to apply discount', max_digits=10)),
                ('maximum_discount_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum discount amount (optional)', max_digits=10, null=True)),
                ('minimum_quantity', models.PositiveIntegerField(default=1, help_text='Minimum quantity required for quantity-based discounts')),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('usage_limit', models.PositiveIntegerField(blank=True, help_text='Maximum number of times this discount can be used', null=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('show_in_notifications', models.BooleanField(default=True, help_text='Show in notification modal')),
                ('notification_message', models.TextField(blank=True, help_text='Custom message to show in notifications')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_discounts', to=settings.AUTH_USER_MODEL)),
                ('target_categories', models.ManyToManyField(blank=True, help_text='Categories for category-based discounts', related_name='discounts', to='products.category')),
                ('target_products', models.ManyToManyField(blank=True, help_text='Specific products for product-specific discounts', related_name='discounts', to='products.product')),
            ],
            options={
                'verbose_name': 'Discount',
                'verbose_name_plural': 'Discounts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DiscountUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(help_text='Session key for anonymous users', max_length=40)),
                ('discount_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('used_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('discount', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='chat_and_notifications.discount')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.order')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discount_usages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-used_at'],
                'unique_together': {('discount', 'session_key', 'order')},
            },
        ),
    ]
