# Generated by Django 4.2.4 on 2025-09-18 11:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0007_productreview_reviewvote_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(help_text='Full name for delivery', max_length=100)),
                ('phone_number', models.CharField(help_text='Contact phone number', max_length=20)),
                ('city', models.CharField(help_text='City name', max_length=50)),
                ('address_line_1', models.CharField(help_text='Primary address line', max_length=200)),
                ('address_line_2', models.CharField(blank=True, help_text='Secondary address line (optional)', max_length=200, null=True)),
                ('postal_code', models.CharField(blank=True, help_text='Postal/ZIP code', max_length=10, null=True)),
                ('country', models.CharField(default='Bangladesh', help_text='Country name', max_length=50)),
                ('is_default', models.BooleanField(default=False, help_text='Is this the default address for the user?')),
                ('address_type', models.CharField(choices=[('home', 'Home'), ('office', 'Office'), ('other', 'Other')], default='home', help_text='Type of address', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(help_text='User who owns this address', on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(help_text='Unique order number', max_length=20, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', help_text='Current order status', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, help_text='Subtotal before tax and shipping', max_digits=10)),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0.0, help_text='Shipping cost', max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Tax amount', max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total order amount', max_digits=10)),
                ('notes', models.TextField(blank=True, help_text='Special instructions or notes for this order', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('estimated_delivery', models.DateTimeField(blank=True, help_text='Estimated delivery date', null=True)),
                ('delivered_at', models.DateTimeField(blank=True, help_text='Actual delivery date', null=True)),
                ('delivery_address', models.ForeignKey(help_text='Delivery address for this order', on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='orders.address')),
                ('user', models.ForeignKey(help_text='User who placed the order', on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Display name for payment method', max_length=100, unique=True)),
                ('method_type', models.CharField(choices=[('cash_on_delivery', 'Cash on Delivery'), ('bkash', 'bKash'), ('nagad', 'Nagad'), ('rocket', 'Rocket'), ('bank_transfer', 'Bank Transfer'), ('credit_card', 'Credit Card'), ('debit_card', 'Debit Card')], help_text='Type of payment method', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description of the payment method', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this payment method is available')),
                ('is_cod', models.BooleanField(default=False, help_text='Is this a cash on delivery method?')),
                ('gateway_name', models.CharField(blank=True, help_text='Payment gateway name (for online payments)', max_length=50, null=True)),
                ('gateway_config', models.JSONField(blank=True, help_text='Gateway configuration settings', null=True)),
                ('processing_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Processing fee for this payment method', max_digits=10)),
                ('processing_fee_type', models.CharField(choices=[('fixed', 'Fixed Amount'), ('percentage', 'Percentage')], default='fixed', help_text='Type of processing fee', max_length=10)),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order for displaying payment methods')),
                ('icon', models.CharField(blank=True, help_text='Icon class or URL for payment method', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Payment amount', max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', help_text='Payment status', max_length=20)),
                ('transaction_id', models.CharField(blank=True, help_text='External transaction ID (from payment gateway)', max_length=100, null=True)),
                ('gateway_response', models.JSONField(blank=True, help_text='Response from payment gateway', null=True)),
                ('cod_collected', models.BooleanField(default=False, help_text='Whether COD amount was collected')),
                ('cod_collected_at', models.DateTimeField(blank=True, help_text='When COD amount was collected', null=True)),
                ('cod_collected_by', models.CharField(blank=True, help_text='Who collected the COD amount', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='When payment was completed', null=True)),
                ('order', models.OneToOneField(help_text='Order this payment is for', on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='orders.order')),
                ('payment_method', models.ForeignKey(help_text='Payment method used', on_delete=django.db.models.deletion.PROTECT, related_name='payments', to='orders.paymentmethod')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(help_text='Quantity of this item')),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per unit at time of order', max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, help_text='Total price for this item (quantity Ã— unit_price)', max_digits=10)),
                ('product_name', models.CharField(help_text='Product name at time of order', max_length=200)),
                ('product_sku', models.CharField(blank=True, help_text='Product SKU at time of order', max_length=100, null=True)),
                ('variant_title', models.CharField(blank=True, help_text='Variant title at time of order', max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(help_text='Order this item belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order')),
                ('product', models.ForeignKey(help_text='Product being ordered', on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='products.product')),
                ('variant', models.ForeignKey(blank=True, help_text='Specific product variant (if applicable)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='products.productvariant')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
                'ordering': ['created_at'],
                'unique_together': {('order', 'product', 'variant')},
            },
        ),
    ]
